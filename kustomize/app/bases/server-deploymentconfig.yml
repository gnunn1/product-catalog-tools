kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: server
  annotations:
    app.openshift.io/connects-to: database
  labels:
    app: server
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: server
    app.kubernetes.io/instance: server
    app.openshift.io/runtime: java
spec:
  strategy:
    type: Rolling
    rollingParams:
      updatePeriodSeconds: 1
      intervalSeconds: 1
      timeoutSeconds: 600
      maxUnavailable: 25%
      maxSurge: 25%
    resources: {}
    activeDeadlineSeconds: 21600
  triggers: []
  replicas: 0
  revisionHistoryLimit: 10
  selector:
    name: server
  template:
    metadata:
      labels:
        name: server
    spec:
      containers:
        - name: server
          image: image-registry.openshift-image-registry.svc:5000/product-catalog/server:latest
          ports:
            - containerPort: 8443
              protocol: TCP
            - containerPort: 8778
              protocol: TCP
            - containerPort: 8080
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 10
          readinessProbe:
              httpGet:
                path: /health
                port: 8080
                scheme: HTTP
              timeoutSeconds: 1
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
          volumeMounts:
          - mountPath: /deployments/config
            name: config-volume
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
      volumes:
      - name: config-volume
        configMap:
          name: server