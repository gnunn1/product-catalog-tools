apiVersion: v1
data:
  application.properties: |
    # Product Datasource
    quarkus.datasource.url=jdbc:mariadb://productdb:3306/productdb
    quarkus.datasource.driver=org.mariadb.jdbc.Driver
    quarkus.datasource.username=productdb
    quarkus.datasource.password=Demo1234
    quarkus.datasource.min-size=1
    quarkus.datasource.max-size=5
    quarkus.hibernate-orm.database.generation=none

    # CORS
    quarkus.http.cors=true
    quarkus.http.cors.origins=http://{{ client_host }}

    # Swagger UI
    quarkus.swagger-ui.always-include=true
kind: ConfigMap
metadata:
  name: server
  labels:
    app: server
    app.kubernetes.io/name: server
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: {{application}}
    app.kubernetes.io/instance: server
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: server
  annotations:
    app.openshift.io/connects-to: database
  labels:
    app: server
    app.kubernetes.io/name: server
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: {{application}}
    app.kubernetes.io/instance: server
    app.openshift.io/runtime: java
spec:
  replicas: 2
  template:
    metadata:
      annotations:
        alpha.image.policy.openshift.io/resolve-names: '*'
      labels:
        name: server
    spec:
      containers:
        - name: server
          image: image-registry.openshift-image-registry.svc:5000/{{namespace}}/server:latest
          imagePullPolicy: Always
          ports:
          - containerPort: 8080
            protocol: TCP
            name: http
          volumeMounts:
          - mountPath: /home/quarkus/config
            name: config-volume
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 10
          readinessProbe:
              httpGet:
                path: /health
                port: 8080
                scheme: HTTP
              timeoutSeconds: 1
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      volumes:
      - name: config-volume
        configMap:
          name: server
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: server
    app.kubernetes.io/name: server
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: {{application}}
    app.kubernetes.io/instance: server
  name: server
spec:
  ports:
  - name: http
    port: 8080
  selector:
    name: server
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: server
  labels:
    app: server
    app.kubernetes.io/name: server
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: {{application}}
    app.kubernetes.io/instance: server
spec:
  port:
    targetPort: http
  to:
    kind: Service
    name: server