apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: maven-cache
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    role: jenkins-slave
  name: jenkins-slaves
data:
  quarkus-template: |-
    <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
      <inheritFrom></inheritFrom>
      <name>quarkus</name>
      <privileged>false</privileged>
      <alwaysPullImage>false</alwaysPullImage>
      <instanceCap>2147483647</instanceCap>
      <idleMinutes>0</idleMinutes>
      <label>quarkus</label>
      <serviceAccount>jenkins</serviceAccount>
      <nodeSelector></nodeSelector>
      <customWorkspaceVolumeEnabled>false</customWorkspaceVolumeEnabled>
      <workspaceVolume class="org.csanchez.jenkins.plugins.kubernetes.volumes.workspace.EmptyDirWorkspaceVolume">
        <memory>false</memory>
      </workspaceVolume>
      <volumes>
        <org.csanchez.jenkins.plugins.kubernetes.volumes.PersistentVolumeClaim>
          <mountPath>/home/jenkins/.m2</mountPath>
          <claimName>maven-cache</claimName>
          <readOnly>false</readOnly>
        </org.csanchez.jenkins.plugins.kubernetes.volumes.PersistentVolumeClaim>
      </volumes>
      <containers>
        <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
          <name>jnlp</name>
          <image>quay.io/gnunn/jenkins-agent-quarkus:19.3.1</image>
          <privileged>false</privileged>
          <alwaysPullImage>false</alwaysPullImage>
          <workingDir>/tmp</workingDir>
          <command></command>
          <args>${computer.jnlpmac} ${computer.name}</args>
          <ttyEnabled>false</ttyEnabled>
          <envVars/>
        </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
      </containers>
      <envVars/>
      <annotations/>
      <imagePullSecrets/>
    </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
---
apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  labels:
    app: product-catalog
  name: server
spec:
  runPolicy: Serial
  source:
    git:
      uri: https://github.com/gnunn1/product-catalog-server
    type: Git
  strategy:
    jenkinsPipelineStrategy: {}
    type: JenkinsPipeline
  triggers:
  - github:
      secret: j2LBtKthwyYlMycgiEtk
    type: GitHub
  - generic:
      secret: 75MrzFxVxS2IcK3jYB8f
    type: Generic
  - type: ConfigChange
---
apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  labels:
    app: product-catalog
  name: client
spec:
  runPolicy: Serial
  source:
    git:
      uri: https://github.com/gnunn1/product-catalog-client
    type: Git
  strategy:
    jenkinsPipelineStrategy: {}
    type: JenkinsPipeline
  triggers:
  - github:
      secret: j2LBtKthwyYlMycgiEtk
    type: GitHub
  - generic:
      secret: 75MrzFxVxS2IcK3jYB8f
    type: Generic
  - type: ConfigChange