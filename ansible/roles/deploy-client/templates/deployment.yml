apiVersion: v1
data:
  config.js: |-
    window.ENV = {
      "API_URL":"http://{{server_host}}"
    }
kind: ConfigMap
metadata:
  name: client
  labels:
    app: client
    app.kubernetes.io/name: client
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: {{application}}
    app.kubernetes.io/instance: client
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: client
  annotations:
    app.openshift.io/connects-to: server
  labels:
    app: client
    app.kubernetes.io/name: client
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: {{application}}
    app.kubernetes.io/instance: client
    app.openshift.io/runtime: nodejs
spec:
  selector:
    matchLabels:
      name: client
  replicas: 2
  template:
    metadata:
      labels:
        name: client
    spec:
      containers:
        - name: client
          image: image-registry.openshift-image-registry.svc:5000/{{namespace}}/client:latest
          imagePullPolicy: Always
          ports:
          - containerPort: 8080
            protocol: TCP
            name: http
          volumeMounts:
          - mountPath: /opt/app-root/src/config.js
            name: config-data
            subPath: config.js
          livenessProbe:
            httpGet:
              path: /health.html
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 10
          readinessProbe:
              httpGet:
                path: /health.html
                port: 8080
                scheme: HTTP
              timeoutSeconds: 1
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      volumes:
      - configMap:
          name: client
        name: config-data
---
apiVersion: v1
kind: Service
metadata:
  name: client
  labels:
    app: client
    app.kubernetes.io/name: client
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: {{application}}
    app.kubernetes.io/instance: client
spec:
  ports:
  - name: http
    port: 8080
  selector:
    name: client
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: client
  labels:
    app: client
    app.kubernetes.io/name: client
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: {{application}}
    app.kubernetes.io/instance: client
spec:
  port:
    targetPort: http
  to:
    kind: Service
    name: client