apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nodejs-binary
spec:
  resources:
    requests:
      storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
---
apiVersion: tekton.dev/v1alpha1
kind: PipelineResource
metadata:
  name: client
spec:
  type: git
  params:
    - name: revision
      value: master
    - name: url
      value: https://github.com/gnunn1/product-catalog-client
---
{% if use_enterprise_registry %}
apiVersion: tekton.dev/v1alpha1
kind: PipelineResource
metadata:
  name: client-internal-image
spec:
  type: image
  params:
  - name: url
    value: image-registry.openshift-image-registry.svc:5000/{{project_prefix}}-dev/client:latest
---
apiVersion: tekton.dev/v1alpha1
kind: PipelineResource
metadata:
  name: client-repository-image
spec:
  type: image
  params:
  - name: url
    value: {{registry_uri}}/{{client_image_repository}}:latest
---
{% endif %}
apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: client
spec:
   workspaces:
    - name: nodejs-binary
   resources:
    - name: source
      type: git
{% if use_enterprise_registry %}
    - name: internal-image
      type: image
    - name: repository-image
      type: image
{% endif %}
   tasks:
    - name: nodejs-build
      taskRef:
        name: nodejs-build
      workspaces:
        - name: app-binary
          workspace: nodejs-binary
      resources:
        inputs:
        - name: source
          resource: source
    - name: build-image
      taskRef:
        name: openshift-client
        kind: Task
      workspaces:
        - name: app-binary
          workspace: nodejs-binary
      runAfter:
        - nodejs-build
      params:
        - name: COMMANDS
          value: |
              ls $(workspaces.app-binary.path)
              oc start-build client --from-dir=$(workspaces.app-binary.path) --wait=true -n {{project_prefix}}-dev
    - name: deploy-dev
      taskRef:
        name: openshift-client
        kind: Task
      workspaces:
        - name: app-binary
          workspace: nodejs-binary
      runAfter:
        - build-image
      params:
        - name: COMMANDS
          value: |
              oc rollout restart deployment/client -n {{project_prefix}}-dev
              oc scale deployment/client --replicas=2 -n {{project_prefix}}-dev
{% if use_enterprise_registry %}
    - name: promote-image
      taskRef:
        name: mirror-image
        kind: Task
      runAfter:
        - deploy-dev
      resources:
        inputs:
        - name: src-image
          resource: internal-image
        - name: dest-image
          resource: repository-image
{% endif %}
    - name: deploy-test
      taskRef:
        name: openshift-client
        kind: Task
      workspaces:
        - name: app-binary
          workspace: nodejs-binary
{% if use_enterprise_registry %}
      runAfter:
        - promote-image
{% else %}
      runAfter:
        - deploy-dev
{% endif %}
      params:
        - name: COMMANDS
          value: |
              oc tag {{project_prefix}}-dev/client:latest {{project_prefix}}-test/client:latest
              oc rollout restart deployment/client -n {{project_prefix}}-test
              oc scale deployment/client --replicas=2 -n {{project_prefix}}-test
---
apiVersion: tekton.dev/v1alpha1
kind: PipelineRun
metadata:
  name: client
  generateName: client-
spec:
  pipelineRef:
    name: client
  resources:
    - name: source
      resourceRef:
        name: client
{% if use_enterprise_registry %}
    - name: internal-image
      resourceRef:
        name: client-internal-image
    - name: repository-image
      resourceRef:
        name: client-repository-image
{% endif %}
  workspaces:
  - name: nodejs-binary
    persistentVolumeClaim:
      claimName: nodejs-binary